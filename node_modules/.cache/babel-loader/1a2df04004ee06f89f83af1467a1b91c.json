{"ast":null,"code":"import _slicedToArray from\"/home/kumar/login-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from\"react\";import\"../css/loginPage.css\";import{connect}from'react-redux';import{GetList as _GetList}from'../actions/loginPageActions';import{Redirect}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginPage=function LoginPage(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setpassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),usernameErr=_useState8[0],setUsernameErr=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),pwdErr=_useState10[0],setPwdErr=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),login=_useState12[0],setLogin=_useState12[1];var inputRef=useRef();useEffect(function(){inputRef.current.focus();var users=[{\"username\":\"hruday@gmail.com\",\"password\":'hruday123'}];props.GetList(users);},[]);var onUsername=function onUsername(e){setUsernameErr(\"\");setUsername(e.target.value);};var onPassword=function onPassword(e){setPwdErr(\"\");setpassword(e.target.value);};var onLogin=function onLogin(){if(username===\"\"||password===\"\"){if(username===\"\"){setUsernameErr(\"This field should not be empty!\");}if(password===\"\"){setPwdErr(\"This field should not be empty!\");}}else{if(props.userList.length){if(props.userList.some(function(res){return res.username===username;})===true){var currentUser=props.userList.filter(function(li){return li.username===username;});if(currentUser[0].password===password){setLogin(true);}else{setPwdErr(\"Incorrect Password!\");}}else{setUsernameErr(\"Invalid User!\");}}}};var handleKeypress=function handleKeypress(e){if(e.charCode===13){onLogin();}};if(login){return/*#__PURE__*/_jsx(Redirect,{to:\"/home\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"login_container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login_page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main_txt\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInput_field\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"glyphicon glyphicon-user user_icon\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input_field\",type:\"text\",placeholder:\"Username\",value:username,onChange:onUsername,onKeyPress:handleKeypress,ref:inputRef}),usernameErr!==\"\"&&/*#__PURE__*/_jsx(\"div\",{className:\"err_msg\",children:usernameErr})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInput_field\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"glyphicon glyphicon-lock user_icon\"}),/*#__PURE__*/_jsx(\"input\",{className:\"input_field\",type:checked===true?\"text\":\"password\",placeholder:\"Password\",value:password,onChange:onPassword,onKeyPress:handleKeypress}),/*#__PURE__*/_jsxs(\"div\",{className:\"show_pwd_con\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checked,onChange:function onChange(){setChecked(!checked);}}),/*#__PURE__*/_jsx(\"div\",{className:\"pwd_txt\",onClick:function onClick(){setChecked(!checked);},children:\"Show Password\"})]}),pwdErr!==\"\"&&/*#__PURE__*/_jsx(\"div\",{className:\"err_msg\",children:pwdErr})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogin,children:\"Login\"})]})});};var mapStateToProps=function mapStateToProps(state){return{userList:state.userList};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{GetList:function GetList(data){return dispatch(_GetList(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/kumar/login-page/src/components/loginPage.jsx"],"names":["React","useEffect","useState","useRef","connect","GetList","Redirect","LoginPage","props","checked","setChecked","username","setUsername","password","setpassword","usernameErr","setUsernameErr","pwdErr","setPwdErr","login","setLogin","inputRef","current","focus","users","onUsername","e","target","value","onPassword","onLogin","userList","length","some","res","currentUser","filter","li","handleKeypress","charCode","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"../css/loginPage.css\";\nimport { connect } from 'react-redux';\nimport { GetList } from '../actions/loginPageActions';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = (props) => {\n    const [checked, setChecked] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n    const [usernameErr, setUsernameErr] = useState(\"\");\n    const [pwdErr, setPwdErr] = useState(\"\");\n    const [login, setLogin] = useState(false);\n    const inputRef = useRef();\n\n    useEffect(() => {\n        inputRef.current.focus();\n        let users = [{\n            \"username\": \"hruday@gmail.com\",\n            \"password\": 'hruday123'\n        }]\n        props.GetList(users)\n    },[])\n\n    const onUsername = (e) => {\n        setUsernameErr(\"\")\n        setUsername(e.target.value)\n    }\n\n    const onPassword = (e) => {\n        setPwdErr(\"\")\n        setpassword(e.target.value)\n    }\n\n    const onLogin = () => {\n        if (username === \"\" || password === \"\") {\n            if (username === \"\") {\n                setUsernameErr(\"This field should not be empty!\")\n            }\n            if (password === \"\") {\n                setPwdErr(\"This field should not be empty!\")\n            }\n        }\n        else {\n            if (props.userList.length) {\n                if (props.userList.some(res => res.username === username) === true) {\n                    let currentUser = props.userList.filter(li => li.username === username)\n                    if (currentUser[0].password === password) {\n                        setLogin(true)\n                    }\n                    else {\n                        setPwdErr(\"Incorrect Password!\")\n                    }\n                }\n                else {\n                    setUsernameErr(\"Invalid User!\")\n                }\n            }\n        }\n    }\n\n    const handleKeypress = (e) => {\n        if (e.charCode === 13) {\n            onLogin()\n        }\n    }\n\n    if (login) {\n        return <Redirect to=\"/home\" />\n    }\n\n    return (\n        <div className=\"login_container\">\n            <div className=\"login_page\">\n                <div className=\"main_txt\">Login</div>\n                <div className=\"userInput_field\">\n                    <i className=\"glyphicon glyphicon-user user_icon\" />\n                    <input\n                        className=\"input_field\"\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={onUsername}\n                        onKeyPress={handleKeypress}\n                        ref={inputRef}\n                    />\n                    {usernameErr !== \"\" && <div className=\"err_msg\">{usernameErr}</div>}\n                </div>\n                <div className=\"userInput_field\">\n                    <i className=\"glyphicon glyphicon-lock user_icon\" />\n                    <input\n                        className=\"input_field\"\n                        type={checked === true ? \"text\" : \"password\"}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onPassword}\n                        onKeyPress={handleKeypress}\n                    />\n                    <div className=\"show_pwd_con\">\n                        <input type=\"checkbox\" checked={checked} onChange={() => { setChecked(!checked) }} />\n                        <div className=\"pwd_txt\" onClick={() => { setChecked(!checked) }}>Show Password</div>\n                    </div>\n                    {pwdErr !== \"\" && <div className=\"err_msg\">{pwdErr}</div>}\n                </div>\n                <button onClick={onLogin}>Login</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userList: state.userList\n})\n\nconst mapDispatchToProps = dispatch => ({\n    GetList: (data) => dispatch(GetList(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}