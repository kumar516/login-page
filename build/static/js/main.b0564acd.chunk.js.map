{"version":3,"sources":["actions/constants.js","store.js","reducers/rootReducer.js","components/loginPage.jsx","actions/loginPageActions.js","components/homePage.jsx","actions/homePageActions.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LIST","EMPLOYEE_LIST","store","createStore","state","action","type","userList","payload","employeeList","applyMiddleware","thunk","connect","dispatch","GetList","data","props","useState","checked","setChecked","username","setUsername","password","setpassword","usernameErr","setUsernameErr","pwdErr","setPwdErr","login","setLogin","inputRef","useRef","useEffect","current","focus","onLogin","length","some","res","filter","li","handleKeypress","e","charCode","to","className","placeholder","value","onChange","target","onKeyPress","ref","onClick","EmployeeList","undefined","map","name","age","gender","email","phoneNo","id","App","path","exact","component","LoginPage","HomePage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0564acd.chunk.js","sourcesContent":["export const USER_LIST = \"USER_LIST\";\nexport const EMPLOYEE_LIST = \"EMPLOYEE_LIST\";","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Reducers from './reducers/rootReducer';\n\nexport const store = createStore(\n    Reducers,\n    applyMiddleware(thunk)\n);","import { USER_LIST, EMPLOYEE_LIST } from \"../actions/constants\";\n\nexport default function Reducers(state = {}, action) {\n    switch (action.type) {\n        case USER_LIST:\n            return ({ ...state, userList: action.payload })\n        case EMPLOYEE_LIST:\n            return ({ ...state, employeeList: action.payload })\n        default:\n            return state;\n    }\n}","import React, { useEffect, useState, useRef } from \"react\";\nimport \"../css/loginPage.css\";\nimport { connect } from 'react-redux';\nimport { GetList } from '../actions/loginPageActions';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = (props) => {\n    const [checked, setChecked] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setpassword] = useState(\"\");\n    const [usernameErr, setUsernameErr] = useState(\"\");\n    const [pwdErr, setPwdErr] = useState(\"\");\n    const [login, setLogin] = useState(false);\n    const inputRef = useRef();\n\n    useEffect(() => {\n        inputRef.current.focus();\n        let users = [{\n            \"username\": \"hruday@gmail.com\",\n            \"password\": 'hruday123'\n        }]\n        props.GetList(users)\n    },[])\n\n    const onUsername = (e) => {\n        setUsernameErr(\"\")\n        setUsername(e.target.value)\n    }\n\n    const onPassword = (e) => {\n        setPwdErr(\"\")\n        setpassword(e.target.value)\n    }\n\n    const onLogin = () => {\n        if (username === \"\" || password === \"\") {\n            if (username === \"\") {\n                setUsernameErr(\"This field should not be empty!\")\n            }\n            if (password === \"\") {\n                setPwdErr(\"This field should not be empty!\")\n            }\n        }\n        else {\n            if (props.userList.length) {\n                if (props.userList.some(res => res.username === username) === true) {\n                    let currentUser = props.userList.filter(li => li.username === username)\n                    if (currentUser[0].password === password) {\n                        setLogin(true)\n                    }\n                    else {\n                        setPwdErr(\"Incorrect Password!\")\n                    }\n                }\n                else {\n                    setUsernameErr(\"Invalid User!\")\n                }\n            }\n        }\n    }\n\n    const handleKeypress = (e) => {\n        if (e.charCode === 13) {\n            onLogin()\n        }\n    }\n\n    if (login) {\n        return <Redirect to=\"/home\" />\n    }\n\n    return (\n        <div className=\"login_container\">\n            <div className=\"login_page\">\n                <div className=\"main_txt\">Login</div>\n                <div className=\"userInput_field\">\n                    <i className=\"glyphicon glyphicon-user user_icon\" />\n                    <input\n                        className=\"input_field\"\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={username}\n                        onChange={onUsername}\n                        onKeyPress={handleKeypress}\n                        ref={inputRef}\n                    />\n                    {usernameErr !== \"\" && <div className=\"err_msg\">{usernameErr}</div>}\n                </div>\n                <div className=\"userInput_field\">\n                    <i className=\"glyphicon glyphicon-lock user_icon\" />\n                    <input\n                        className=\"input_field\"\n                        type={checked === true ? \"text\" : \"password\"}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={onPassword}\n                        onKeyPress={handleKeypress}\n                    />\n                    <div className=\"show_pwd_con\">\n                        <input type=\"checkbox\" checked={checked} onChange={() => { setChecked(!checked) }} />\n                        <div className=\"pwd_txt\" onClick={() => { setChecked(!checked) }}>Show Password</div>\n                    </div>\n                    {pwdErr !== \"\" && <div className=\"err_msg\">{pwdErr}</div>}\n                </div>\n                <button onClick={onLogin}>Login</button>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userList: state.userList\n})\n\nconst mapDispatchToProps = dispatch => ({\n    GetList: (data) => dispatch(GetList(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import { USER_LIST } from \"./constants\";\n\nexport const GetList = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: USER_LIST,\n            payload: data\n        })\n    }\n}\n","import React, { useEffect } from \"react\";\nimport \"../css/homePage.css\";\nimport { connect } from 'react-redux';\nimport { EmployeeList } from '../actions/homePageActions';\n\nconst HomePage = (props) => {\n    useEffect(() => {\n        let users = [{\n            \"id\": 1,\n            \"name\": \"test1\",\n            \"age\": \"11\",\n            \"gender\": \"male\",\n            \"email\": \"test1@gmail.com\",\n            \"phoneNo\": \"9415346313\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"test2\",\n            \"age\": \"12\",\n            \"gender\": \"male\",\n            \"email\": \"test2@gmail.com\",\n            \"phoneNo\": \"9415346314\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"test3\",\n\n            \"age\": \"13\",\n            \"gender\": \"male\",\n            \"email\": \"test3@gmail.com\",\n            \"phoneNo\": \"9415346315\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"test4\",\n            \"age\": \"14\",\n            \"gender\": \"male\",\n            \"email\": \"test4@gmail.com\",\n            \"phoneNo\": \"9415346316\"\n        },\n        {\n            \"id\": 5,\n            \"name\": \"test5\",\n            \"age\": \"15\",\n            \"gender\": \"male\",\n            \"email\": \"test5@gmail.com\",\n            \"phoneNo\": \"9415346317\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"test6\",\n            \"age\": \"16\",\n            \"gender\": \"male\",\n            \"email\": \"test6@gmail.com\",\n            \"phoneNo\": \"9415346318\"\n        }]\n        props.EmployeeList(users)\n    },[])\n\n    return (\n        <div className=\"homePage_container\">\n            <div className=\"home_page_heading\">\n                <div className=\"heading_txt\">Employee List</div>\n            </div>\n            <div className=\"table_container\">\n                <div className=\"table\">\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Age</th>\n                                <th>Gender</th>\n                                <th>Email</th>\n                                <th>Phone No.</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {(props.employeeList !== undefined) && props.employeeList.map(res=>\n                                <tr key={res.id}>\n                                    <td>{res.name}</td>\n                                    <td>{res.age}</td>\n                                    <td>{res.gender}</td>\n                                    <td>{res.email}</td>\n                                    <td>{res.phoneNo}</td>\n                                </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employeeList: state.employeeList\n})\n\nconst mapDispatchToProps = dispatch => ({\n    EmployeeList: (data) => dispatch(EmployeeList(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import { EMPLOYEE_LIST } from \"./constants\";\n\nexport const EmployeeList = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: EMPLOYEE_LIST,\n            payload: data\n        })\n    }\n}","import { Provider } from 'react-redux';\nimport { store } from './store';\nimport React, { Component } from \"react\";\nimport LoginPage from './components/loginPage';\nimport HomePage from './components/homePage';\nimport \"./css/responsive.css\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Switch>\n              <Route path={'/'} exact component={LoginPage} />\n              <Route path={\"/login\"} component={LoginPage} />\n              <Route path={\"/home\"} component={HomePage} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}